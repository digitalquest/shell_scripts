# THIS IS NOT A SCRIPT
# COPY AND PASTE ONE LINE AFTER THE OTHER
# MAKE SURE A LINE EXECUTES WITHOUT ERROR BEFORE MOVING TO THE NEXT ONE
#
# Update Moodle from 2.6.1 to 2.6.5
#
# Steps:
# 1. cd to Moodle directory
# 2. put site in maintenance mode
# 3. pull changes from the Moodle official repo (detailed in git sequence)
# 4. execute Moodle ugrade script
# 5. disable maintenance mode
#

# one way of backing up Moodle database before update/upgrade 
# it works with our settings, as - once logged in - we do not provide username or password to use mysql
# feel free to use your prefered way of backing up your database
#
cd /data/www/backup
mv moodle-database.sql.gz moodle-database-old.sql.gz
#mysqldump -h example.com -u myusername --password=mypassword -C -Q -e --create-options db1 > moodle-database.sql
mysqldump -C -Q -e --create-options db1 > moodle-database.sql
gzip moodle-database.sql
#
# one should also create a backup of moodledata
# there are several method to achieve this so it's not covered here.

# change to Moodle directory (change according to your setup)
cd /data/www/html/
# enable maintenance mode: sudo -u apache /usr/bin/php admin/cli/maintenance.php --enable
/usr/bin/php admin/cli/maintenance.php --enable
#
#BEGIN git SEQUENCE
#
# create an orphan branch called MOODLE_26_GITHUB(a branch without parent commit)
# the branch won't be used; it's just to have a 'clean' start with no parent commit.
git checkout --orphan MOODLE_26_GITHUB

# delete all the files in the working directory; they are not needed 
# working directory is now empty
git rm -rf .

# add Moodle official repo; name it upstream
git remote add upstream git://git.moodle.org/moodle.git

# pull the branch MOODLE_26_STABLE and tags from upstream
# working directory now contains the latest 2.6.x
git pull --tags upstream MOODLE_26_STABLE

# version 2.6.5 is needed; we reset the HEAD to the corresponding commit
# the reset is important for the merge later
git reset --hard v2.6.5

# create branch MOODLE_265 and check it out
git checkout -b MOODLE_265

# Our Moodle 2.6.1 corresponds to the local branch MOODLE_26_STABLE
# Moodle 2.6.5 corresponds to the local branch MOODLE_265; currently checked out.
# we merge both branches with the following options
# -s recursive or --strategy=recursive (see git documentation for possible stratgies)
# -X ours or --strategy-option=ours (in case of conflicts, priority is given to our branch [MOODLE_265 / v2.6.5])
git merge -s recursive -X ours MOODLE_26_STABLE

# the current branch and the working directory now contain
# official Moodle 2.6.5 merged with all the customisation of our Moodle 2.6.1

git status
#change as needed
git add <file>
git commit -m "after update to 2.6.5"
#
# branch MOODLE_26_STABLE is renamed MOODLE_261
git branch -m MOODLE_26_STABLE MOODLE_261
# current branch (MOODLE_265) is renamed MOODLE_26_STABLE
git branch -m MOODLE_26_STABLE
# delete branch MOODLE_26_GITHUB
git branch -d MOODLE_26_GITHUB
# push our newly merged local branch to remote branch MOODLE_26_STABLE on origin
git push -u origin MOODLE_26_STABLE
#END git SEQUENCE
#
# exucute Moodle upgrade script and disable maintenance mode
#sudo -u apache /usr/bin/php admin/cli/upgrade.php
#sudo -u apache /usr/bin/php admin/cli/maintenance.php --disable
/usr/bin/php admin/cli/upgrade.php
/usr/bin/php admin/cli/maintenance.php --disable

# visit the website administration page to finish the upgrade
